type ProbateRecord @model @auth(rules: [{allow: private}]) {
  id: ID! @primaryKey
  title: String!
  deceasedId: ID!
  filingId: ID!
  appraiser: [String]!
  witness: [String]!
  lineItems: [LineItem] @hasMany(indexName: "byProbate", fields: ["id"])
  words: [Word]!
  totalValue: Float!
  reviewCount: Int!
  lowerTitle: String!  
}

type Filing {
  id: ID!
  state: String!
  county: String!
  date: AWSDate!
  filer: String!
}

type Deceased {
  id: ID!
  name: String!
  gender: String!
}

type Rect {
  left: Float!
  top: Float!
  width: Float!
  height: Float!
}

type LineItem @model @auth(rules: [{allow: private}]) {
  id: ID!
  probateId: ID! @index(name: "byProbate", sortKeyFields:["rowIndex"], queryField: "lineItemByProbateRecord")
  wordIds: [ID]!
  title: String!
  description: String!
  category: String!
  subcategory: String!
  quantity: Int!
  value: Float!
  confidence: Float!
  rowIndex: Int!
  lowerTitle: String!
  boundingBox: Rect 
  attributeForId: ID!  
}

type Document @model @auth(rules: [{allow: private}]) {
  id: ID!
  lines: [Line]! 
  words: [Word]! 
}

type Line {
  id: ID!
  wordIds: [ID]!
  boundingBox: Rect!
  confidence: Float!
  rowIndex: Int!
  lowerText: String!
}

type Word {
  id: ID!
  text: String!
  boundingBox: Rect  
}

type ModelProbateRecordConnection @aws_iam @aws_cognito_user_pools {
  items: [ProbateRecord]!
  nextToken: String,
  scannedCount: Int,
  count: Int  
}

type LineItemReviewerNote @model @auth(rules: [{allow: private}]) {
  id: ID!
  lineItemId: ID!
  title: String!
  reviewed: Boolean!
  reviewer: String!
}

type Issue @model @auth(rules: [{allow: private}]) {
  id: ID!
  title: String!
  description: String!
  reporter: String!
  status: IssueStatus
  type: IssueType
}

enum IssueStatus {
  open
  closed
  resolved
  obsolete
  will_not_fix
}

enum IssueType {
  bug
  feature_request
}

type ProbateRecordLock @model @auth(rules: [{allow: private}]) {
  id: ID!
  probateId: ID! @index(name: "byProbate", sortKeyFields:["date"], queryField: "lockByProbateRecord")
  date: AWSDate!
  lockedBy: String!
}
 