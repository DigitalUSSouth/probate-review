@use '@angular/material' as mat
@include mat.core()

$primary-color: #73000a
$secondary-color: #000
$even-row-color: #dbe1f1
$odd-row-color: #96adfc
$cell-text-color: black
$primary-text-color: white

// // https://stackoverflow.com/questions/66124756/sasserror-expected
$usc-palette: (50: #f5e5e8, 100: #e7c0c4, 200: #c88586, 300: #af585a, 400: #b03638, 500: #ac1f1f, 600: #9f171e, 700: #900e19, 800: #830713, 900: #73000a, contrast: (50 : #000000, 100 : #000000, 200 : #000000, 300 : #ffffff, 400 : #ffffff, 500 : #ffffff, 600 : #ffffff, 700 : #ffffff, 800 : #ffffff, 900 : #ffffff))

$usc-app-primary: mat.define-palette($usc-palette, 900)
$usc-app-accent: mat.define-palette(mat.$grey-palette, 600, 500, 900)
$usc-app-warn: mat.define-palette(mat.$orange-palette)

// // Create the theme object (a Sass map containing all of the palettes).
$usc-app-theme: mat.define-light-theme((color: (primary: $usc-app-primary, accent: $usc-app-accent, warn: $usc-app-warn), typography: mat.define-typography-config(), density: 0,))

// // here I am only calling checkbox mixin because i only want to change the checkbox color     
@include mat.checkbox-theme($usc-app-theme)
@include mat.button-theme($usc-app-theme)
@include mat.dialog-theme($usc-app-theme)
@include mat.input-theme($usc-app-theme)
// // @include mat.angular-material-theme($usc-app-theme)
// @include mat.mat-core-theme($usc-app-theme)
@include mat.all-component-themes($usc-app-theme)

$my-opacity: ("dark": 1,"light": 0.8)

@function get-color($key: '900')
  @return map-get($usc-palette, $key)

@function get-color-alpha($name: '900', $opacity: 'dark')
  $color: get-color($name)
  // Get the named opacity level, if it exists
  @if map-has-key($my-opacity, $opacity)
    $opacity: map-get($my-opacity, $opacity)

  // Use rgba() to manipulate the color's alpha level
  @return rgba($color, $opacity)

// @include mat.core-theme($usc-app-theme)
// @use '@angular/material' as mat

// @include mat.core()

// $my-primary: mat.define-palette(mat.$indigo-palette, 500)
// $my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400)

// $my-theme: mat.define-light-theme((color: (primary: $my-primary, accent: $my-accent,),density: 0,))

// // Emit theme-dependent styles for common features used across multiple components.
// @include mat.core-theme($my-theme)
